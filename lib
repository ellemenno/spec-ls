#!/usr/bin/env ruby
# encoding: utf-8

require 'json'

def usage(s='')
    $stderr.puts(s)
    $stderr.puts("Usage: #{File.basename($0)}: [-h | --help] [-b | --build] [-r | --run]")
    exit(2)
end

def exec_with_echo(cmd)
	puts(cmd)
	stdout = %x[#{cmd}]
	puts(stdout) unless stdout.empty?
	$?.exitstatus
end

def mode
	m = []

	loop { 
		case ARGV[0]
			when '-b', '--build'
				ARGV.shift
				m << :build
			when '-r', '--run'
				ARGV.shift
				m << :run
			when '-h', '--help'
				usage()
			when /^-/
				usage("Unknown option: #{ARGV[0].inspect}")
			else
				break
		end
	}

	return :build_run if m.include? :build and m.include? :run
	return m[0] if (m.length == 1)

	usage("No option specified")
end

def sdk_name
	config = JSON.parse(File.read('loom.config'))
	config['sdk_version']
end

def compile(sdk, config_array)
	config_array.each do | config |
		cmd = %Q[~/.loom/sdks/#{sdk}/tools/lsc #{config}]
		abort("◈ compile failed") if (exec_with_echo(cmd) != 0)
	end
end	

def execute(sdk, binary)
	cmd = %Q[~/.loom/sdks/#{sdk}/tools/loomexec #{binary}]
	abort("◈ execute failed") if (exec_with_echo(cmd) != 0)
end	

def install_libs(sdk, libs_array)
	libs_array.each do | lib |
		cmd = %Q[cp #{lib} ~/.loom/sdks/#{sdk}/libs]
		abort("◈ lib install failed") if (exec_with_echo(cmd) != 0)
	end
end


def build
	sdk = sdk_name
	
	puts('')
	puts('...build libs')
	compile(sdk, ['lib-spec.build'])

	puts('')
	puts('...install libs')
	install_libs(sdk, ['libs/Spec.loomlib'])

	puts('')
	puts('...build app')
	compile(sdk, ['test-spec.build'])
end

def run
	sdk = sdk_name
	puts('...run app')
	execute(sdk, 'bin/TestSpec.loom')
end

case mode
	when :build
		build()
	when :run 
		run()
	when :build_run
		build()
		run()
end

puts("...done")
puts('')
exit